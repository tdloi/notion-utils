name: CI
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Clean cache
        run: yarn cache clean --all

      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS
      #     path: ~/.npm
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      - name: Install Dependencies
        run: yarn install --force --cache-folder /tmp/.junk

      - name: Build
        run: yarn build

      - name: Pull Docker Image
        run: docker pull fwouts/chrome-screenshot:1.1.0

      # waiting for https://github.com/fwouts/react-screenshot-test/pull/287
      - name: Test
        run: yarn test

      - name: Set package version
        run: |
          echo "PACKAGE_VERSION=v$(cat package.json | jq -r '.version')" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_VERSION=$(curl -s https://api.github.com/repos/tdloi/notion-utils/releases/latest | jq -r '.tag_name')" >> $GITHUB_ENV
          echo "RELEASED_VERSION=v$(npm view @tdloi/notion-utils version)" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        if: env.PACKAGE_VERSION != env.GITHUB_RELEASE_VERSION

      - name: Github release
        run: |
          git config --local user.email github-actions@github.com
          git config --local user.name github-actions
          git fetch origin 'refs/tags/*:refs/tags/*'
          hub release create -m ${{ env.PACKAGE_VERSION }} -m "$(git log --format="%h %s" ${{ env.GITHUB_RELEASE_VERSION }}..HEAD)" ${{ env.PACKAGE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.PACKAGE_VERSION != env.GITHUB_RELEASE_VERSION

      - name: Publish to NPM
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: env.PACKAGE_VERSION != env.RELEASED_VERSION
